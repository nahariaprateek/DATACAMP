————————————————————————
Set Theory for SQL Joins


UNION and UNION ALL 	syntax

UNION
————
SELECT * 
	FROM left_table
UNION
SELECT * 
	FROM right_table


UNION ALL
——————
SELECT * 
	FROM left_table
UNION ALL
SELECT * 
	FROM right_table


SELECT monarch AS leader, country
FROM monarchs
UNION
SELECT prime_minister, country
FROM prime_ministers
ORDER BY country, leader
LIMIT 10;



LETS PRACTICE
——
-- Select all fields from economies2015
SELECT *
FROM economies2015    
-- Set operation
UNION
-- Select all fields from economies2019
SELECT *
FROM economies2019
ORDER BY code, year;



-- Query that determines all pairs of code and year from economies and populations, without duplicates
SELECT code, year
FROM economies
UNION 
SELECT country_code, year
FROM populations
ORDER BY code, year;

-- Query that determines all pairs of code and year from economies and populations, without duplicates
SELECT code, year
FROM economies
UNION ALL
SELECT country_code, year
FROM populations
ORDER BY code, year;




AT the INTERSECT
——————————

SELECT id, val
FROM left_table
INTERSECT

SELECT id, val
FROM right_table




-- Return all cities with the same name as a country
SELECT name
FROM cities
INTERSECT
SELECT name
FROM countries;



EXCEPT
————
SELECT monarch, country
FROM monarchs
EXCEPT
SELECT prime_minister, country
FROM prime_ministers;


-- Return all cities that do not have the same name as a country
SELECT name 
FROM cities
EXCEPT
SELECT name
FROM countries
ORDER BY name;



