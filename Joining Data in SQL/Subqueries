Subqueries

Subquerying with semi joins and anti joins



SELECT president, country, continent
FROM presidents
WHERE country IN
	(SELECT country
	FROM states
	WHERE indep_year < 1800);

JOIN & ANTI JOIN 

ANTI

SELECT country, president
FROM presidents
WHERE continent LIKE ‘%America’
	AND country NOT IN 
	(SELECT country
	FROM states
	WHERE indep_year < 1800);


LETS PRACTICE
—

-- Select country code for countries in the Middle East
SELECT code 
FROM countries
WHERE region ='Middle East';


-- Select unique language names
SELECT DISTINCT name
FROM languages
-- Order by the name of the language
ORDER BY name;



SELECT DISTINCT name
FROM languages
-- Add syntax to use bracketed subquery below as a filter
WHERE code IN
    (SELECT code
    FROM countries
    WHERE region = 'Middle East')
ORDER BY name;





-- Select code and name of countries from Oceania
SELECT code, name
FROM countries
WHERE continent = 'Oceania';



SELECT code, name
FROM countries
WHERE continent = 'Oceania'
-- Filter for countries not included in the bracketed subquery
  AND code NOT IN
    (SELECT code
    FROM currencies);



Subqueries inside WHERE and SELECT



SELECT *
FROM some_table
WHERE some_numeric_field IN (4,8, 12);



SELECT *
FROM some_table
WHERE some_field IN
	(SELECT some_numeric_field
		FROM another_table
	WHERE field2 = some_condition);


	
￼


-- Select average life_expectancy from the populations table
SELECT AVG(life_expectancy)
-- Filter for the year 2015
FROM populations
WHERE year = 2015


SELECT *
FROM populations
-- Filter for only those populations where life expectancy is 1.15 times higher than average
WHERE life_expectancy > 1.15 *
  (SELECT AVG(life_expectancy)
   FROM populations
   WHERE year = 2015) 
   AND year = 2015;




-- Select relevant fields from cities table
SELECT name, country_code, urbanarea_pop
FROM cities

-- Filter using a subquery on the countries table
WHERE name IN(
    SELECT capital
    FROM countries
)
ORDER BY urbanarea_pop DESC;



Subquery inside SELECT

SELECT countries.name AS country, COUNT(*) AS cities_num
  FROM cities
    INNER JOIN countries
    ON countries.code = cities.country_code
GROUP BY country
ORDER BY cities_num DESC, country
LIMIT 9;




SELECT countries.name AS country,
  (SELECT count(*)
   FROM cities
   WHERE countries.code = cities.country_code) AS cities_num
FROM countries
ORDER BY cities_num DESC, country
LIMIT 9;



Subqueries inside FROM

-- Select fields (with aliases)
SELECT code, count(name) AS lang_num
  -- From languages
  FROM languages
-- Group by code
GROUP BY code;



-- Select fields
SELECT local_name, subquery.lang_num
  -- From countries
  FROM countries,
    -- Subquery (alias as subquery)
    (SELECT code, count(name) as lang_num
     FROM languages
     GROUP BY code) AS subquery
  -- Where codes match
  WHERE countries.code = subquery.code
-- Order by descending number of languages
ORDER BY lang_num DESC;




Subquery challenge


-- Select relevant fields
SELECT code, inflation_rate, unemployment_rate
FROM economies
WHERE year = 2015 
  AND code NOT IN
-- Subquery returning country codes filtered on gov_form
    (SELECT code
     FROM countries
     WHERE (gov_form LIKE '%Monarchy%' OR gov_form LIKE '%Republic%'))
ORDER BY inflation_rate;






FINAL CHALLENGE

-- Select fields
SELECT name, country_code, city_proper_pop, metroarea_pop,  
      -- Calculate city_perc
      city_proper_pop / metroarea_pop * 100 AS city_perc
  -- From appropriate table
  FROM cities
  -- Where 
  WHERE name IN
    -- Subquery
    (SELECT capital
     FROM countries
     WHERE (continent = 'Europe'
        OR continent LIKE '%America'))
       AND metroarea_pop IS NOT NULL
-- Order appropriately
ORDER BY city_perc desc
-- Limit amount
LIMIT 10;
—————x-x-x—————x-x-x——————————————————————x-xx—
